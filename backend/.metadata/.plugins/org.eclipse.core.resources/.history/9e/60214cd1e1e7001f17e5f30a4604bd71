package com.app.service;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.app.Account.dto.ManagerDto;
import com.app.custom_exceptions.ResourceNotFoundException;
import com.app.dto.LoginRequestDTO;
import com.app.entities.Manager;
import com.app.repository.ManagerRepository;

@Service
public class ManagerServiceImpl implements ManagerService {

    @Autowired
    private ManagerRepository managerRepository;
    
    @Autowired
    private PasswordEncoder passwordEncoder;
    
    @Autowired
    private ModelMapper modelMapper;

    public ResponseEntity<?> authenticateManager(LoginRequestDTO loginRequest) {
        Manager manager = managerRepository.findByEmail(loginRequest.getEmail())
            .orElseThrow(() -> new ResourceNotFoundException("Manager not found"));
        
        if(passwordEncoder.matches(loginRequest.getPassword(), manager.getPassword())) {
            ManagerDto managerDTO = modelMapper.map(manager, ManagerDto.class);
            return ResponseEntity.ok(managerDTO);
        }
        throw new RuntimeException("Invalid credentials");
    }
}